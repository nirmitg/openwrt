diff --git a/net/mac80211/chan.c b/net/mac80211/chan.c
index 03e8d2e..c8425ab 100644
--- a/net/mac80211/chan.c
+++ b/net/mac80211/chan.c
@@ -380,7 +380,8 @@ int ieee80211_vif_use_channel(struct ieee80211_sub_if_data *sdata,
 	struct ieee80211_chanctx *ctx;
 	int ret;
 
-	WARN_ON(sdata->dev && netif_carrier_ok(sdata->dev));
+	if (local->use_chanctx)
+		WARN_ON(sdata->dev && netif_carrier_ok(sdata->dev));
 
 	mutex_lock(&local->chanctx_mtx);
 	__ieee80211_vif_release_channel(sdata);
diff --git a/net/mac80211/mlme.c b/net/mac80211/mlme.c
index 651b7ae..78d1454 100644
--- a/net/mac80211/mlme.c
+++ b/net/mac80211/mlme.c
@@ -1013,6 +1013,10 @@ static void ieee80211_chswitch_work(struct work_struct *work)
 	/* XXX: shouldn't really modify cfg80211-owned data! */
 	ifmgd->associated->channel = local->_oper_chandef.chan;
 
+	if(ieee80211_vif_use_channel(sdata, &local->_oper_chandef,
+					IEEE80211_CHANCTX_SHARED))
+		sdata_info(sdata, "driver channel switch failed\n");
+
 	/* XXX: wait for a beacon first? */
 	ieee80211_wake_queues_by_reason(&local->hw,
 					IEEE80211_MAX_QUEUE_MAP,
