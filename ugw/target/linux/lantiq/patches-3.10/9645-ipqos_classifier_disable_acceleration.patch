This patch is to support disabling acceleration for a selected PPA session.

IPQoS patch for acceleration disable

diff --git a/net/Kconfig b/net/Kconfig
--- a/net/Kconfig
+++ b/net/Kconfig
@@ -80,6 +80,13 @@ config INET
 
 	  Short answer: say Y.
 
+config LANTIQ_IPQOS_CLASS_ACCELERATION_DISABLE
+	bool "IPQOS Accelration Disable Support"
+	depends on LANTIQ_IPQOS
+	help
+		Enables Enables check for 13th bit in NF-MARK and disables ppa add hook if this bit is set
+		if unsure  say N
+
 config LTQ_UDP_REDIRECT
         bool "LTQ Kernel Packet Interface for UDP re-direction"
         help
diff --git a/net/ipv4/ip_output.c b/net/ipv4/ip_output.c
--- a/net/ipv4/ip_output.c
+++ b/net/ipv4/ip_output.c
@@ -199,6 +199,16 @@ static inline int ip_finish_output2(stru
 #if defined(CONFIG_LTQ_PPA_API) || defined(CONFIG_LTQ_PPA_API_MODULE)
         if ( ppa_hook_session_add_fn != NULL )
         {
+#if defined(CONFIG_LANTIQ_IPQOS_CLASS_ACCELERATION_DISABLE)
+	   /* check for 13th bit in NFMARK set by IPQOS classifier */
+          /* If this bit is set, dont call PPA session add fn*/
+          bool accel_st;
+#ifdef CONFIG_NETWORK_EXTMARK
+          GET_DATA_FROM_MARK_OPT(skb->extmark, ACCELSEL_MASK, ACCELSEL_START_BIT_POS, accel_st);
+#endif
+          if (accel_st == 0) {
+#endif
+
             struct nf_conn *ct;
 
             enum ip_conntrack_info ctinfo;
@@ -210,6 +220,10 @@ static inline int ip_finish_output2(stru
             flags |= CTINFO2DIR(ctinfo) == IP_CT_DIR_ORIGINAL ? PPA_F_SESSION_ORG_DIR : PPA_F_SESSION_REPLY_DIR;
     
             ppa_hook_session_add_fn(skb, ct, flags);
+#if defined(CONFIG_LANTIQ_IPQOS_CLASS_ACCELERATION_DISABLE)
+	   }
+#endif
+
         }
 #if defined(CONFIG_LTQ_PPA_MPE_IP97)
     struct iphdr *hdr = ip_hdr(skb);
diff --git a/net/ipv6/ip6_output.c b/net/ipv6/ip6_output.c
--- a/net/ipv6/ip6_output.c
+++ b/net/ipv6/ip6_output.c
@@ -137,6 +137,16 @@ static int ip6_finish_output2(struct sk_
 #if defined(CONFIG_LTQ_PPA_API) || defined(CONFIG_LTQ_PPA_API_MODULE)
 	if ( ppa_hook_session_add_fn != NULL )
 	{
+#if defined(CONFIG_LANTIQ_IPQOS_CLASS_ACCELERATION_DISABLE)
+		/* check for 13th bit in NFMARK set by IPQOS classifier */
+		/* If this bit is set, dont call PPA session add fn*/
+		bool accel_st;
+#ifdef CONFIG_NETWORK_EXTMARK
+   GET_DATA_FROM_MARK_OPT(skb->extmark, ACCELSEL_MASK, ACCELSEL_START_BIT_POS, accel_st);
+#endif
+		if (accel_st == 0) {
+#endif
+
 	#ifdef CONFIG_NF_CONNTRACK
 		struct nf_conn *ct;
 	#else
@@ -152,6 +162,9 @@ static int ip6_finish_output2(struct sk_
 		flags = 0; //  post routing
 		flags |= CTINFO2DIR(ctinfo) == IP_CT_DIR_ORIGINAL ? PPA_F_SESSION_ORG_DIR : PPA_F_SESSION_REPLY_DIR;  
 		ppa_hook_session_add_fn(skb, ct, flags);
+#if defined(CONFIG_LANTIQ_IPQOS_CLASS_ACCELERATION_DISABLE)
+	    }
+#endif
 	}
 #endif
 
